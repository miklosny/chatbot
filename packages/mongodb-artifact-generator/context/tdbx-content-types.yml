# TDBX Content Types
# MongoDB Driver and Connector Documentation Content Types
# Last Updated: January 24, 2023
# https://docs.google.com/document/d/1J1sbtMRO0J_RobL_yeqIfuJgCCz5pnzvhx_eECWCyrc/edit
...
type: landing-page
name: Landing Page
objectives:
  - Introduce the product and sections of the documentation.
pageStructure: |
  ==============
  <Product Name>
  ==============

  Introduce the product and what it does.

  <Section Name(s)>
  -----------------

  Summarize the content the user can find in each section of this product’s documentation.

  <Optional: Starter Content>
  ---------------------------

  For drivers that do not have a corresponding docs site on mongodb.com, provide instructions on how to get started using that driver.

  Learn
  -----

  Link to the Developher Hub search results for the product.

  Link to the MongoDB University course, if one exists for the product.
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/
  - https://www.mongodb.com/docs/drivers/c/
---
type: quick-start
name: Quick Start
objectives:
  - Help readers set up a sample development environment that
    accomplishes a specific goal – usually establishing a connection
    and running a command – to be able to observe the results.
pageStructure: |
  ===========
  Quick Start
  ===========

  Identify what the content of the page shows. Refer to related resources if they landed in the wrong place.

  Define any terms that a new user may not be familiar with (e.g. MongoDB driver, MongoDB Atlas, etc.)

  Explain what the rest of the page demonstrates.

  <Setup/Requirements>
  --------------------

  Provide steps required to set up a project or development environment including installation of dependencies or setting them up using a build tool.

  <Optional Atlas Setup>
  ----------------------

  If the project can be run using a free tier MongoDB Atlas cluster, provide instructions on setup. Add steps for loading sample data if required.

  <Additional Instructions>
  -------------------------

  Provide steps for any other instructions and code examples to achieve the goal of the tutorial. 

  Each enumerated step is presented in the recommended/essential order to complete the task. Each step should have a title that describes the task. Each step description should provide instructions on how to complete that task and verify success.

  Describe what the developer accomplished at the completion of the tutorial.

  Next Steps
  ----------

  Recommend next steps in the learning journey.
examples:
  # - https://www.mongodb.com/docs/drivers/node/current/quick-start/
  - https://www.mongodb.com/docs/drivers/node/v5.7/quick-start/
---
type: quick-reference
name: Quick Reference
objectives:
  - Provide users with a list of common operations to help them with the
    syntax and locate further guidance and learning (e.g. links to
    guidance and API documentation)
pageStructure: |
  ===============
  Quick Reference
  ===============
  
  Describe the purpose of the page, e.g.:
  “This page shows the driver syntax for several MongoDB commands and links to their related reference and API documentation.”
  
  Provide a table containing columns for “Command” and “Syntax”. Each row contains a different command.
  
  In the “Command” column, provide a human readable description of the command as well as links to API documentation, Usage Example, and Fundamentals page if they exist. 
  
  In the “Syntax” column, provide a code example that demonstrates how to call the command, and sample output if it adds clarity.
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/quick-reference/
  # - https://www.mongodb.com/docs/drivers/node/current/quick-reference/
  - https://www.mongodb.com/docs/drivers/node/v5.7/quick-reference/
  - https://mongodb.com/docs/drivers/go/current/quick-reference
---
type: tutorial
name: Tutorials
objectives:
  - Help readers accomplish a specific goal that includes working source
    code or configurations to be able to observe the results in their
    development environments.
pageStructure: |
  ====================
  <Tutorial Objective>
  ====================

  Clarify the task if necessary and describe the end goal.

  <Goal Description>
  ------------------

  Present each enumerated step in the recommended/essential order to ensure successful completion of the task. Each step should have a title that describes the task. Each step description should provide instructions on how to complete that task and verify success.

  Summary
  -------

  Describe what the developer accomplished at the completion of the tutorial.

  Learn More
  ----------

  Link to additional, related resources
examples:
  # - https://mongodb.com/docs/kafka-connector/current/tutorials/tutorial-setup
  - https://mongodb.com/docs/kafka-connector/v1.10/tutorials/tutorial-setup
  # - https://www.mongodb.com/docs/kafka-connector/current/tutorials/source-connector/
  - https://www.mongodb.com/docs/kafka-connector/v1.10/tutorials/source-connector/
---
type: usage-example
name: Usage Examples
objectives:
  - Improve SEO by answering “How do I …?” questions for a subset of the
    most commonly-searched terms related to drivers.
  - Provide a copy-paste example of the command that the reader can run
    after completing the Quick Start or setting up a similar environment.
pageStructure: |
  =====================
  <Command Description>
  =====================

  Describe what the command accomplishes.

  Link to more information for related conceptual learning.

  Optional: information on optional parameters and/or related or chainable commands.

  Example
  -------

  Describe what the code example accomplishes.

  Describe the parameters passed to the command.

  List the parameters used in the example and what they do

  Provide a code example

  Provide sample output if it seems useful

  Link to additional information such as API documentation or other MongoDB docs.
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/usage-examples/findOne/
  # - https://www.mongodb.com/docs/drivers/node/current/usage-examples/updateMany/
  - https://www.mongodb.com/docs/drivers/node/v5.7/usage-examples/updateMany/
---
type: fundamental
name: Fundamentals
objectives:
  - Describe the concepts related to a topic including implementation
    details.
  - Similar in structure and intent to the Divio/Diataxis “How-to” content type.
pageStructure: |
  ==============
  <Concept Name>
  ==============

  Overview
  --------

  Summarize the learning goal and its relation to the current set of documentation.

  <Related Concepts/Terminology>
  ------------------------------

  Provide information that helps the user understand the terms and concepts used in the guide.

  <Concepts and Implementation Examples>
  --------------------------------------

  Explain what each concept or command is to provide context to the reader.

  List implementation requirements such as including additional libraries or loading sample data.

  Demonstrate how to implement the concept using code examples

  Provide links to related information and API documentation.
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/crud/compound-operations/
  - https://www.mongodb.com/docs/drivers/go/current/fundamentals/bson/
  # - https://www.mongodb.com/docs/drivers/node/current/fundamentals/connection/network-compression/
  - https://www.mongodb.com/docs/drivers/node/v5.7/fundamentals/connection/network-compression/
---
type: settings-reference
name: Settings Reference
objectives:
  - Categorize available configuration settings that might be difficult
    to locate in API documentation or require more explanation.
pageStructure: |
  ===================
  <Settings Category>
  ===================

  Overview
  ---------

  Explain this category of settings
  Provide a link to a full list of settings if one exists.

  Settings
  --------

  Present the settings in a table with columns for “Name” and “Description”, or another presentation format if that organizes the information better.

  In the “Name” column, list the setting name as used in the configuration.

  In the  “Description” column, provide information such as setting data type, a description of what the setting does along with example values if applicable, the default value, and a list of accepted values.
examples:
  # - https://www.mongodb.com/docs/kafka-connector/current/source-connector/configuration-properties/mongodb-connection/
  - https://www.mongodb.com/docs/kafka-connector/v1.10/source-connector/configuration-properties/mongodb-connection/
  # - https://www.mongodb.com/docs/drivers/node/current/fundamentals/connection/connection-options/
  - https://www.mongodb.com/docs/drivers/node/v5.7/fundamentals/connection/connection-options/
---
type: whats-new
name: What’s New
objectives:
  - Inform users of new features/functionality 
  - Inform users of behavior changes 
  - Inform users of deprecated/replaced functionality
pageStructure: |
  ==========
  What’s New
  ==========

  <Optionally link to each section corresponding to version releases depending on number of sections>

  What's New in x.xx
  ------------------

  List the features, behavior changes, and deprecated/replaced functionality new to this version

  Link to release notes if they provide more insight.
  if useful.
examples:
  - https://www.mongodb.com/docs/drivers/go/current/whats-new/
  # - https://www.mongodb.com/docs/drivers/node/current/whats-new/
  - https://www.mongodb.com/docs/drivers/node/v5.7/whats-new/
---
type: compatibility-table
name: Compatibility Tables
objectives:
  - Show driver version feature support against versions of MongoDB and
    driver version support against language versions.
  - Help users identify what parts of their development/deployment
    environment they need to change when planning to upgrade  MongoDB
    server, driver, and/or language versions.
pageStructure: |
  =============
  Compatibility
  =============

  MongoDB Compatibility
  --------------------

  Compatibility Table Legend
  ^^^^^^^^^^^^^^^^^^^^^^^^^^

  For the MongoDB compatibility table, we currently show one of three values to indicate complete feature support, partial feature support, and incompatibility. The legend provides descriptions for the symbols that represent these values.

  Provide a table showing driver/connector versions on the y-axis and MongoDB server versions on the x-axis.


  Language Compatibility
  ----------------------

  Provide a table showing driver/connector versions on the y-axis and language versions on the x-axis.


  Link to a page that provides more detail on how to interpret the tables.

  Note:
  When representing multiple versions with a single row or column, follow these guidelines:
  Avoid using “>” (greater than) and “>=” (equal to or greater than) for maintainability
  Use dependency management notations with care for both maintainability and readability by your audience.
  Ensure all the versions are included in the meta keywords to improve internal search. Meta keywords example
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/compatibility/
---
type: issue-help
name: Issues & Help
objectives:
  - Provide information on how to get support for general questions, how to report bugs, how to request new features, and how to contribute to the driver.
pageStructure: |
  =============
  Issues & Help
  =============

  Link to MongoDB community forum.

  Bugs / Feature Requests
  -----------------------

  Provide the user with instructions on how to open a ticket on JIRA.

  Pull Requests
  -------------

  Provide the user with instructions on how to open a PR against the official driver repository.
examples:
  # - https://www.mongodb.com/docs/kafka-connector/current/issues-and-help/
  - https://www.mongodb.com/docs/kafka-connector/v1.10/issues-and-help/
  - https://www.mongodb.com/docs/drivers/go/current/issues-and-help/
  # - https://www.mongodb.com/docs/drivers/node/current/issues-and-help/
  - https://www.mongodb.com/docs/drivers/node/v5.7/issues-and-help/
---
type: contribution-guide
name: How to Contribute
objectives:
  - Provide instructions on how to contribute to the driver
pageStructure: |
  =================
  How to Contribute
  =================

  Summarize the actions required for authoring and submitting a contribution.

  Link to the GitHub repository for the driver or connector.

  Link to any other resources that can help the user author or submit a contribution.
examples:
  # - https://www.mongodb.com/docs/kafka-connector/current/contribute/
  - https://www.mongodb.com/docs/kafka-connector/v1.10/contribute/
---
type: faq
name: FAQ
objectives:
  - Show commonly encountered issues/questions and provide answers and
    guidance on troubleshooting, usually driven by SEO findings. Prefer
    explaining how to correctly implement and configure the driver to
    accomplish tasks and avoid errors in other sections of the
    documentation.
pageStructure: |
  ===
  FAQ
  ===
  
  List frequently asked questions, each with its own header as shown below:
    
  <Question>
  ----------

  Present one or more brief answers to the question, including any copy and paste code examples as well as links to internal or external documentation that provide more information.
examples:
  # - https://www.mongodb.com/docs/drivers/node/current/faq/
  - https://www.mongodb.com/docs/drivers/node/v5.7/faq/
  - https://www.mongodb.com/docs/drivers/go/current/faq/
  - https://www.mongodb.com/docs/drivers/java/sync/current/faq/
---
type: troubleshooting
name: Troubleshooting
notes:
  - Currently an experimental type that overlaps objectives of the FAQ
    and the Fundamental types. Requested by Kafka Connector PM to
    present content that customers frequently ask about.
objectives:
  - Provide detailed answers on how to resolve a common issue including
    implementation examples.
pageStructure: |
  =======================
  <Troubleshooting Topic>
  =======================

  Overview
  --------

  Describe the topic and provide information that helps the user identify whether their situation matches.

  Identify common causes

  Provide potential solutions

  Recommend preventative measures
examples:
  # - https://www.mongodb.com/docs/kafka-connector/current/troubleshooting/recover-from-invalid-resume-token/
  - https://www.mongodb.com/docs/kafka-connector/v1.10/troubleshooting/recover-from-invalid-resume-token/
---
type: upgrade-version
name: Upgrading Versions
objectives:
  - Help a reader identify what changes they need to make to their
    application or build/deployment environment when upgrading to a new
    version.
pageStructure: |
  ==================
  <Upgrade Versions>
  ==================

  Overview
  --------

  Identify Link to required products for upgrading

  Breaking Changes
  ----------------

  Provide lists of breaking changes for each version to help the reader understand what they need to change when upgrading to a newer version of the driver.

  For drivers, create a separate section to list driver versions that drop support for which server versions. 
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/upgrade/
---
type: migrate-legacy-version
name: Migration from Legacy Version
objectives:
  - Provide guidance on how to migrate from a legacy driver/library to
    the supported driver versions.
pageStructure: |
  ===========================
  Migrate from the Legacy API
  ===========================

  Overview
  ----------

  Provide instructions on how to identify whether the reader is using the legacy versions or API.
  Describe a common solution to making changes

  API Changes
  -----------

  Provide a list of changes that explains the legacy implementation and corresponding current implementation
examples:
  - https://www.mongodb.com/docs/drivers/java/sync/current/legacy/
...
