kind: pipeline
type: kubernetes
name: test-all

trigger:
  event:
    - push
    - tag
    - pull_request
  paths:
    include:
      - chat-server/**/*
      - chat-core/**/*
      - chat-ui/**/*
      - ingest/**/*
      - scripts/**/*

steps:
  - name: test
    image: node:18
    commands:
      - npm ci
      - npm run build
      - npm run lint
      - npm run test

    environment:
      PORT: 3000
      OPENAI_EMBEDDING_MODEL: text-embedding-ada-002
      OPENAI_EMBEDDING_MODEL_VERSION: 2023-03-15-preview
      MONGODB_DATABASE_NAME: docs-chatbot-test
      VECTOR_SEARCH_INDEX_NAME: default
      OPENAI_CHAT_COMPLETION_MODEL_VERSION: 2023-06-01-preview
      MONGODB_CONNECTION_URI:
        from_secret: mongodb_connection_uri
      OPENAI_ENDPOINT:
        from_secret: openai_endpoint
      OPENAI_API_KEY:
        from_secret: openai_api_key
      OPENAI_EMBEDDING_DEPLOYMENT:
        from_secret: openai_embedding_deployment
      OPENAI_CHAT_COMPLETION_DEPLOYMENT:
        from_secret: openai_chat_completion_deployment
      DEVCENTER_CONNECTION_URI:
        from_secret: devcenter_connection_uri
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token

# ---
# Chat Server pipelines
# ---
---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: staging-build-chat-server

trigger:
  branch:
    - main
  event:
    - push

  paths:
    include:
      - chat-server/**/*
      - chat-core/**/*
      - chat-ui/**/*

steps:
  # Builds and publishes Docker image for staging
  - name: publish-staging-chat-server
    image: plugins/kaniko-ecr
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: chat-server.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-chat-server
      build_args:
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
        - GIT_COMMIT=${DRONE_COMMIT_SHA:0:7}
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-staging
        - latest-staging
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to staging environment
  - name: promote-staging-chat-server
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} staging
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: staging-deploy-chat-server

trigger:
  event:
    - promote
  target:
    - staging
  paths:
    include:
      - chat-server/**/*
      - chat-core/**/*
      - chat-ui/**/*
  branch:
    - main

steps:
  # Deploys docker image associated with staging build that triggered promotion
  - name: deploy-staging-chat-server
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.12.3
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: chat-server-staging
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-staging,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-chat-server,ingress.enabled=true,ingress.hosts[0]=chat-server.docs.staging.corp.mongodb.com
      values_files: ["chat-server/environments/staging.yml"]
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token
---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: qa-build-chat-server

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/chat-server-qa-*

steps:
  # Builds and publishes Docker image for qa
  - name: publish-qa-chat-server
    image: plugins/kaniko-ecr
    environment:
      ENVIRONMENT: qa
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: chat-server.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-chat-server
      build_args:
        - ENVIRONMENT
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-qa
        - latest-qa
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to staging environment (QA server is in staging namespace)
  - name: promote-qa-chat-server
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} staging
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: qa-deploy-chat-server

trigger:
  event:
    - promote
  target:
    - staging
  ref:
    - refs/tags/chat-server-qa-*

steps:
  # Deploys docker image associated with staging build that triggered promotion
  - name: deploy-qa-chat-server
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.12.3
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: chat-server-qa
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-qa,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-chat-server,ingress.enabled=true,ingress.hosts[0]=chat-qa.docs.staging.corp.mongodb.com
      values_files: ["chat-server/environments/qa.yml"]
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token

---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: production-build-chat-server

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/chat-server-v*

steps:
  # Builds and publishes Docker image for production
  - name: publish-production-chat-server
    image: plugins/kaniko-ecr
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: chat-server.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-chat-server
      build_args:
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-production
        - latest-production
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to production environment
  - name: promote-production-chat-server
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} production
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: production-deploy-chat-server

trigger:
  event:
    - promote
  target:
    - production
  ref:
    include:
      - refs/tags/chat-server-v*

steps:
  # Deploys Docker image associated with production build that triggered promotion
  - name: deploy-production-chat-server
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.12.3
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: docs-chat
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-production,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-chat-server,ingress.enabled=true,ingress.hosts[0]=chat-server.docs.prod.corp.mongodb.com
      values_files: ["chat-server/environments/production.yml"]
      api_server: https://api.prod.corp.mongodb.com
      kubernetes_token:
        from_secret: prod_kubernetes_token

# ---
# Ingest service
# ---
---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: staging-build-ingest-service

trigger:
  branch:
    - main
  event:
    - push
  paths:
    include:
      - ingest/**/*
      - chat-core/**/*

steps:
  # Builds and publishes Docker image for staging
  - name: publish-staging-ingest-service
    image: plugins/kaniko-ecr
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: ingest-service.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-ingest-service
      build_args:
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-staging
        - latest-staging
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to staging environment
  - name: promote-staging-ingest-service
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} staging
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: staging-deploy-ingest-service

trigger:
  event:
    - promote
  target:
    - staging
  paths:
    include:
      - ingest/**/*
      - chat-core/**/*
  branch:
    - main

steps:
  # Deploys docker image associated with staging build that triggered promotion
  - name: deploy-staging-ingest-service
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/cronjobs
      chart_version: 1.7.1
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: ingest-service
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-staging,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-ingest-service
      values_files:
        - ingest/environments/staging.yml
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token

---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: production-build-ingest-service

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/ingest-v*

steps:
  # Builds and publishes Docker image for production
  - name: publish-production-ingest-service
    image: plugins/kaniko-ecr
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: ingest-service.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-ingest-service
      build_args:
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-production
        - latest-production
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to production environment
  - name: promote-production-ingest-service
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} production
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: production-deploy-ingest-service

trigger:
  event:
    - promote
  target:
    - production
  ref:
    include:
      - refs/tags/ingest-v*

steps:
  - name: deploy-production-ingest-service
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/cronjobs
      chart_version: 1.7.1
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: ingest-service
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-production,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-ingest-service
      values_files:
        - ingest/environments/production.yml
      api_server: https://api.prod.corp.mongodb.com
      kubernetes_token:
        from_secret: prod_kubernetes_token
# ---
# Chat UI
# ---
---
kind: pipeline
name: publish-chat-ui

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/chat-ui-v*

steps:
  - name: npm
    image: plugins/npm
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      folder: chat-ui
      registry: https://registry.npmjs.org/
      username:
        from_secret: mongodb_chatbot_ui_npm_username
      email:
        from_secret: mongodb_chatbot_ui_npm_email
      password:
        from_secret: mongodb_chatbot_ui_npm_token
# ---
# Scripts service
# ---
---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: staging-build-scripts-service

trigger:
  branch:
    - main
  event:
    - push
  paths:
    include:
      - scripts/**/*
      - chat-core/**/*
      - chat-server/**/*

steps:
  # Builds and publishes Docker image for staging
  - name: publish-staging-scripts-service
    image: plugins/kaniko-ecr
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: scripts-service.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-scripts-service
      build_args:
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-staging
        - latest-staging
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to staging environment
  - name: promote-staging-scripts-service
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} staging
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: staging-deploy-scripts-service

trigger:
  event:
    - promote
  target:
    - staging
  paths:
    include:
      - scripts/**/*
      - chat-core/**/*
      - chat-server/**/*
  branch:
    - main

steps:
  # Deploys docker image associated with staging build that triggered promotion
  - name: deploy-staging-scripts-service
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/cronjobs
      chart_version: 1.7.1
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: scripts-service
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-staging,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-scripts-service
      values_files:
        - scripts/environments/staging.yml
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token

---
depends_on: ["test-all"]
kind: pipeline
type: kubernetes
name: production-build-scripts-service

trigger:
  event:
    - tag
  ref:
    include:
      - refs/tags/scripts-v*

steps:
  # Builds and publishes Docker image for production
  - name: publish-production-scripts-service
    image: plugins/kaniko-ecr
    environment:
      LG_ARTIFACTORY_PASSWORD:
        from_secret: lg_artifactory_password
      LG_ARTIFACTORY_USERNAME:
        from_secret: lg_artifactory_username
      LG_ARTIFACTORY_EMAIL:
        from_secret: lg_artifactory_email
    settings:
      dockerfile: scripts-service.dockerfile
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: docs/${DRONE_REPO_NAME}-scripts-service
      build_args:
        - LG_ARTIFACTORY_PASSWORD
        - LG_ARTIFACTORY_USERNAME
        - LG_ARTIFACTORY_EMAIL
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}-production
        - latest-production
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key

  # Promotes current drone build to production environment
  - name: promote-production-scripts-service
    image: drone/cli:1.4.0-alpine
    commands:
      - drone build promote mongodb/chatbot ${DRONE_BUILD_NUMBER} production
    environment:
      DRONE_SERVER: ${DRONE_SYSTEM_PROTO}://${DRONE_SYSTEM_HOST}
      DRONE_TOKEN:
        from_secret: drone_token

---
kind: pipeline
type: kubernetes
name: production-deploy-scripts-service

trigger:
  event:
    - promote
  target:
    - production
  ref:
    include:
      - refs/tags/ingest-v*

steps:
  - name: deploy-production-scripts-service
    image: quay.io/mongodb/drone-helm:v3
    settings:
      chart: mongodb/cronjobs
      chart_version: 1.7.1
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: docs
      release: scripts-service
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7}-production,image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/docs/${DRONE_REPO_NAME}-scripts-service
      values_files:
        - scripts/environments/production.yml
      api_server: https://api.prod.corp.mongodb.com
      kubernetes_token:
        from_secret: prod_kubernetes_token
